//
// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.27.1
// source: placeholder_descriptor.proto

package zetasql

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Proto bundles ((broken link)) may omit types that are
// referenced by other types that are included. When users do this, engines may
// include a placeholder type so that proto2 doesn't get upset. Engines could
// use the built-in proto2 placeholder feature, but it has heuristics that don't
// always work for guessing enum vs. message and exact names, and it can be
// handled better since engines have the real descriptors and can omit them.
// Engines don't need to do this for enum types, only message types, since for
// enum types engines would have to make up a fake enumeration value (since they
// must have at least one). For messages, engines can just make a message with
// no fields and this option, which engines may ignore.
type PlaceholderDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPlaceholder *bool `protobuf:"varint,1,opt,name=is_placeholder,json=isPlaceholder" json:"is_placeholder,omitempty"`
}

func (x *PlaceholderDescriptorProto) Reset() {
	*x = PlaceholderDescriptorProto{}
	mi := &file_placeholder_descriptor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceholderDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceholderDescriptorProto) ProtoMessage() {}

func (x *PlaceholderDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_placeholder_descriptor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceholderDescriptorProto.ProtoReflect.Descriptor instead.
func (*PlaceholderDescriptorProto) Descriptor() ([]byte, []int) {
	return file_placeholder_descriptor_proto_rawDescGZIP(), []int{0}
}

func (x *PlaceholderDescriptorProto) GetIsPlaceholder() bool {
	if x != nil && x.IsPlaceholder != nil {
		return *x.IsPlaceholder
	}
	return false
}

var file_placeholder_descriptor_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*PlaceholderDescriptorProto)(nil),
		Field:         14004,
		Name:          "zetasql.PlaceholderDescriptorProto.placeholder_descriptor",
		Tag:           "bytes,14004,opt,name=placeholder_descriptor",
		Filename:      "placeholder_descriptor.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional zetasql.PlaceholderDescriptorProto placeholder_descriptor = 14004;
	E_PlaceholderDescriptorProto_PlaceholderDescriptor = &file_placeholder_descriptor_proto_extTypes[0]
)

var File_placeholder_descriptor_proto protoreflect.FileDescriptor

var file_placeholder_descriptor_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x7a, 0x65, 0x74, 0x61, 0x73, 0x71, 0x6c, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x01, 0x0a, 0x1a, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x73, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x32,
	0x7c, 0x0a, 0x16, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb4, 0x6d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x7a, 0x65, 0x74, 0x61, 0x73, 0x71, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x15, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x42, 0x31, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x7a, 0x65, 0x74, 0x61,
	0x73, 0x71, 0x6c, 0x42, 0x1b, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
}

var (
	file_placeholder_descriptor_proto_rawDescOnce sync.Once
	file_placeholder_descriptor_proto_rawDescData = file_placeholder_descriptor_proto_rawDesc
)

func file_placeholder_descriptor_proto_rawDescGZIP() []byte {
	file_placeholder_descriptor_proto_rawDescOnce.Do(func() {
		file_placeholder_descriptor_proto_rawDescData = protoimpl.X.CompressGZIP(file_placeholder_descriptor_proto_rawDescData)
	})
	return file_placeholder_descriptor_proto_rawDescData
}

var file_placeholder_descriptor_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_placeholder_descriptor_proto_goTypes = []any{
	(*PlaceholderDescriptorProto)(nil),  // 0: zetasql.PlaceholderDescriptorProto
	(*descriptorpb.MessageOptions)(nil), // 1: google.protobuf.MessageOptions
}
var file_placeholder_descriptor_proto_depIdxs = []int32{
	1, // 0: zetasql.PlaceholderDescriptorProto.placeholder_descriptor:extendee -> google.protobuf.MessageOptions
	0, // 1: zetasql.PlaceholderDescriptorProto.placeholder_descriptor:type_name -> zetasql.PlaceholderDescriptorProto
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	1, // [1:2] is the sub-list for extension type_name
	0, // [0:1] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_placeholder_descriptor_proto_init() }
func file_placeholder_descriptor_proto_init() {
	if File_placeholder_descriptor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_placeholder_descriptor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_placeholder_descriptor_proto_goTypes,
		DependencyIndexes: file_placeholder_descriptor_proto_depIdxs,
		MessageInfos:      file_placeholder_descriptor_proto_msgTypes,
		ExtensionInfos:    file_placeholder_descriptor_proto_extTypes,
	}.Build()
	File_placeholder_descriptor_proto = out.File
	file_placeholder_descriptor_proto_rawDesc = nil
	file_placeholder_descriptor_proto_goTypes = nil
	file_placeholder_descriptor_proto_depIdxs = nil
}
