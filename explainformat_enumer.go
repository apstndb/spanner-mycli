// Code generated by "enumer -type=explainFormat -linecomment"; DO NOT EDIT.

package main

import (
	"fmt"
	"strings"
)

const _explainFormatName = "CURRENTTRADITIONALCOMPACT"

var _explainFormatIndex = [...]uint8{0, 0, 7, 18, 25}

const _explainFormatLowerName = "currenttraditionalcompact"

func (i explainFormat) String() string {
	if i < 0 || i >= explainFormat(len(_explainFormatIndex)-1) {
		return fmt.Sprintf("explainFormat(%d)", i)
	}
	return _explainFormatName[_explainFormatIndex[i]:_explainFormatIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _explainFormatNoOp() {
	var x [1]struct{}
	_ = x[explainFormatUnspecified-(0)]
	_ = x[explainFormatCurrent-(1)]
	_ = x[explainFormatTraditional-(2)]
	_ = x[explainFormatCompact-(3)]
}

var _explainFormatValues = []explainFormat{explainFormatUnspecified, explainFormatCurrent, explainFormatTraditional, explainFormatCompact}

var _explainFormatNameToValueMap = map[string]explainFormat{
	_explainFormatName[0:0]:        explainFormatUnspecified,
	_explainFormatLowerName[0:0]:   explainFormatUnspecified,
	_explainFormatName[0:7]:        explainFormatCurrent,
	_explainFormatLowerName[0:7]:   explainFormatCurrent,
	_explainFormatName[7:18]:       explainFormatTraditional,
	_explainFormatLowerName[7:18]:  explainFormatTraditional,
	_explainFormatName[18:25]:      explainFormatCompact,
	_explainFormatLowerName[18:25]: explainFormatCompact,
}

var _explainFormatNames = []string{
	_explainFormatName[0:0],
	_explainFormatName[0:7],
	_explainFormatName[7:18],
	_explainFormatName[18:25],
}

// explainFormatString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func explainFormatString(s string) (explainFormat, error) {
	if val, ok := _explainFormatNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _explainFormatNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to explainFormat values", s)
}

// explainFormatValues returns all values of the enum
func explainFormatValues() []explainFormat {
	return _explainFormatValues
}

// explainFormatStrings returns a slice of all String values of the enum
func explainFormatStrings() []string {
	strs := make([]string, len(_explainFormatNames))
	copy(strs, _explainFormatNames)
	return strs
}

// IsAexplainFormat returns "true" if the value is listed in the enum definition. "false" otherwise
func (i explainFormat) IsAexplainFormat() bool {
	for _, v := range _explainFormatValues {
		if i == v {
			return true
		}
	}
	return false
}
